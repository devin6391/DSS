type Tag {
  id: ID! @id
  name: String!
  createdAt: DateTime! @createdAt
}

type User {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  isOwnUser: Boolean!
  ownUser: OwnUser
  primaryAuthProvider: AuthProviderUser
  otherAuthProviders: [AuthProviderUser]
  roles: [OwnUserRole]
  tags: [Tag]!
}

type OwnUser {
  id: ID! @id
  username: String!
  email: String!
  phone: String
  address: String
  coordinates: String
  pic: String
  otherDetails: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  tags: [Tag]!
}

type OwnUserRole {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  tags: [Tag]!
  name: String!
}


type AuthProviderUser {
  id: ID! @id
  authProvider: AuthProvider!
  authToken: String!
  refreshToken: String!
  expiryTime: DateTime
  username: String
  email: String
  phone: String
  address: String
  coordinates: String
  pic: String
  otherDetails: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  tags: [Tag]!
}

type AuthProvider {
  id: ID! @id
  name: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  tags: [Tag]!
  supportedSites: [String!]
}

type Remote {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  name: String!
  link: String
  query: String
  queryResolution: String
}

type Resource {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  info: Info
  interaction: Interaction
  media: Media
  link: String
}

type InfoTypes {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  name: String @unique
}

type Info {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  title: String!
  description: String!
  descriptionSmall: String!
  remotePrimary: Remote!
  remotes: [Remote]!
  infoType: InfoType!
  resources: [Resource]!
  resourcePrimary: Resource!
}

type InteractionType {
  id: ID! @id
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  name: String!
}

type Interaction {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  interactionType: InteractionType!
  remote: Remote
  publicUser: User
  publicEntity: PublicEntity
}

type PublicEntityType {
  id: ID! @id
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  name: String!
}

type PublicEntity {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  entityType: PublicEntityType!
  remote: Remote!
}

type Media {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  title: String!
  description: String!
  descriptionSmall: String!
  remote: Remote!
}

type Initiative {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  tags: [Tag]!
  name: String!
  infoPrimary: Info!
  description: String!
  descriptionSmall: String!
  media: [Media!]
  mediaPrimary: Media
  resources: [Resource!]
  childInitiatives: [Initiative!]
}